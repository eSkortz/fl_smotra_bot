from aiogram.types import ReplyKeyboardMarkup, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import types


def get(chapter: str, images_number: int) -> ReplyKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–π–º–µ—Ä", callback_data=f"add_change_timer|{chapter}"
        ),
        types.InlineKeyboardButton(
            text="‚ôª –í–∫–ª/–í—ã–∫–ª", callback_data=f"add_on_off|{chapter}"
        ),
    )
    builder.row(
        types.InlineKeyboardButton(
            text="üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç",
            callback_data=f"add_change_text|{chapter}",
        ),
    )
    if images_number < 10:
        builder.row(
            types.InlineKeyboardButton(
                text="üéë –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ",
                callback_data=f"add_attach_photo|{chapter}",
            ),
            types.InlineKeyboardButton(
                text="üß® –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ", callback_data=f"add_remove_photos|{chapter}"
            ),
        )
    else:
        builder.row(
            types.InlineKeyboardButton(
                text="üß® –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ", callback_data=f"add_remove_photos|{chapter}"
            ),
        )
    builder.row(
        types.InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –∫ üì¢ –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è", callback_data="my_adds"
        )
    )
    return builder.as_markup(resize_keyboard=True)
