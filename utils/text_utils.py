from db.orm.schema_public import Cars, UserPointers


BOOL_TO_STATUS_ADDS = {True: "‚úÖ –≤–∫–ª", False: "‚ùå –≤—ã–∫–ª"}

CARS_CLASSIFICATION = {
    "audi": {
        "emoji": "‚û∞",
        "name": "Audi",
    },
    "bmw": {
        "emoji": "üåç",
        "name": "BMW",
    },
    "mercedes": {
        "emoji": "üß≠",
        "name": "Mercedes",
    },
    "multi": {
        "emoji": "üåê",
        "name": "–ú—É–ª—å—Ç–∏–±—Ä–µ–Ω–¥–æ–≤—ã–µ",
    },
    "lada": {
        "emoji": "üõ∏",
        "name": "–ê–≤—Ç–æ–í–ê–ó",
    },
    "japan": {
        "emoji": "üéå",
        "name": "–Ø–ø–æ–Ω—Å–∫–∏–µ",
    },
    "moto": {
        "emoji": "üèç",
        "name": "–ú–æ—Ç–æ—Ü–∏–∫–ª—ã",
    },
    "helicopter": {
        "emoji": "üöÅ",
        "name": "–í–µ—Ä—Ç–æ–ª–µ—Ç—ã",
    },
    "elite": {
        "emoji": "üëë",
        "name": "–≠–ª–∏—Ç–Ω—ã–µ",
    },
    "exclusive": {
        "emoji": "üíé",
        "name": "–≠–∫—Å–∫–ª—é–∑–∏–≤—ã",
    },
    "trucks": {
        "emoji": "üöõ",
        "name": "–ì—Ä—É–∑–æ–≤–∏–∫–∏",
    },
}

CHAPTER_CLASSIFICATION = {
    "transport": {
        "emoji": "üöó",
        "name": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        "channel_id": "750716702224023573",
        "pointer_column_name": "transport_pointer",
        "pointer_model": UserPointers.transport_pointer,
    },
    "numbers": {
        "emoji": "üé±",
        "name": "–ù–æ–º–µ—Ä–∞",
        "channel_id": "750716755336233061",
        "pointer_column_name": "numbers_pointer",
        "pointer_model": UserPointers.numbers_pointer,
    },
    "homes": {
        "emoji": "üè†",
        "name": "–î–æ–º–∞",
        "channel_id": "750716815080161440",
        "pointer_column_name": "homes_pointer",
        "pointer_model": UserPointers.homes_pointer,
    },
    "business": {
        "emoji": "üè¶",
        "name": "–ë–∏–∑–Ω–µ—Å—ã",
        "channel_id": "750716866837741608",
        "pointer_column_name": "business_pointer",
        "pointer_model": UserPointers.business_pointer,
    },
    "clothes": {
        "emoji": "ü•ã",
        "name": "–û–¥–µ–∂–¥–∞",
        "channel_id": "774748875315347477",
        "pointer_column_name": "clothes_pointer",
        "pointer_model": UserPointers.clothes_pointer,
    },
    "weapon": {
        "emoji": "üî´",
        "name": "–û—Ä—É–∂–∏–µ",
        "channel_id": "774749257177628682",
        "pointer_column_name": "weapon_pointer",
        "pointer_model": UserPointers.weapon_pointer,
    },
    "loot": {
        "emoji": "üì¶",
        "name": "–õ—É—Ç-–ø—Ä–µ–¥–º–µ—Ç—ã",
        "channel_id": "1059930592743018597",
        "pointer_column_name": "loot_pointer",
        "pointer_model": UserPointers.loot_pointer,
    },
    "services": {
        "emoji": "üíµ",
        "name": "–£—Å–ª—É–≥–∏",
        "channel_id": "1109229581354934412",
        "pointer_column_name": "services_pointer",
        "pointer_model": UserPointers.services_pointer,
    },
    "global": {
        "emoji": "üìä",
        "name": "–¢–æ—Ä–≥–æ–≤–∞—è –æ–±—â–∏–π",
        "channel_id": "750715538686083103",
        "pointer_column_name": "global_pointer",
        "pointer_model": UserPointers.global_pointer,
    },
}


def batch_price_generator(price_str: str) -> str:
    try:
        price = int(price_str)
    except ValueError:
        return "Ivalid price parameter"
    formatted_price = "{:,}".format(price).replace(",", ".")
    return formatted_price


def generate_car_info_text(car_model: Cars) -> str:
    caption = (
        f"{CARS_CLASSIFICATION[car_model.classification]['emoji']} {car_model.name}\n\n"
        + f"üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {car_model.max_speed} –∫–º/—á\n"
        + f"üí∞ –ì–æ—Å. —Å—Ç–æ–∏–º–æ—Å—Ç—å: {batch_price_generator(car_model.price)} —Ä—É–±.\n"
        + f"üóø –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–∏–≤–∞: {batch_price_generator(car_model.price * 0.75)} —Ä—É–±.\n"
        + f"üì¶ –ë–∞–≥–∞–∂–Ω–∏–∫: {car_model.trunk} –º–µ—Å—Ç(-a)\n"
        + f"‚õΩÔ∏è –û–±—ä–µ–º –±–∞–∫–∞: {car_model.tank} –ª (–∫–≤—Ç/—á)\n"
        + f"ü™Ñ –ù–∞–ª–∏—á–∏–µ –æ–±–≤–µ—Å–æ–≤: {'‚úÖ' if car_model.is_body_kit == True else '‚ùå'}\n\n"
    )
    if car_model.classification == "helicopter":
        return caption
    caption = caption + (
        f"üõ† –¢—é–Ω–∏–Ω–≥:\n"
        + f"üí£ –§—Ç —Å –≤–Ω–µ—à–∫–æ–π - {batch_price_generator(car_model.price * 0.22125)} —Ä—É–±.\n"
        + f"üß® –§—Ç –±–µ–∑ —Ç—É—Ä–±–∏–Ω—ã –∏ –≤–Ω–µ—à–∫–∏"
        + f" - {batch_price_generator(car_model.price * 0.141)} —Ä—É–±.\n\n"
        + f"üî® –î–≤–∏–≥–∞—Ç–µ–ª—å - {batch_price_generator(car_model.price * 0.063)} —Ä—É–±.\n"
        + f"‚öí –ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á - {batch_price_generator(car_model.price * 0.042)} —Ä—É–±.\n"
        + f"üõ† –¢–æ—Ä–º–æ–∑–∞ - {batch_price_generator(car_model.price * 0.036)} —Ä—É–±.\n"
        + f"‚õè –¢—É—Ä–±–∏–Ω–∞ - {batch_price_generator(car_model.price * 0.0345)} —Ä—É–±.\n\n"
        + f"üòé –¢–æ–Ω–∏—Ä–æ–≤–∫–∞ - {batch_price_generator(car_model.price * 0.012)} —Ä—É–±.\n"
    )
    if (
        car_model.classification == "moto"
        or car_model.name == "Kawasaki Ninja H2R"
        or car_model.name == "BRP Can-Am Maverick"
    ):
        return caption
    caption = caption + (
        f"üî¶ –ö—Å–µ–Ω–æ–Ω/–ù–µ–æ–Ω - {batch_price_generator(car_model.price * 0.018)} —Ä—É–±.\n"
        + f"üõû –ü—É–ª–µ—Å—Ç–æ–π–∫–∏–µ –ø–æ–∫—Ä—ã—à–∫–∏ - {batch_price_generator(car_model.price * 0.033)} —Ä—É–±.\n"
        + f"üõû –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–ª–µ—Å/–≤—ã—Å–æ—Ç–∞ –ø–æ–¥–≤–µ—Å–∫–∏"
        + f" - {batch_price_generator(car_model.price * 0.01)} —Ä—É–±.\n"
    )
    return caption
